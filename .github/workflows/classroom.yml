# begin .github/workflows/classroom.yml

name: Autograding Tests
on:
  - push
  - workflow_dispatch
  - repository_dispatch

permissions:
  checks: read
  actions: write # upload artifact
  contents: read

jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set report file names
      id: json
      env:
        BUILD_IMAGE_URL: ${{ github.event.client_payload.image_url }}
      run: |
        ASSIGNMENT_NUM=$(echo "${{ github.repository }}" | grep -o '[/-][0-9]\{3\}' | head -1 | tr -d '/-')
        echo "ASSIGNMENT_NUM=$ASSIGNMENT_NUM" >> $GITHUB_ENV
        SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
        echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
        echo "syntax=report_syntax.json" >> $GITHUB_ENV
        echo "style=report_style.json" >> $GITHUB_ENV
        echo "results=report_results.json" >> $GITHUB_ENV
        echo "workflow_student_code_folder=${{ github.workspace }}" >> $GITHUB_ENV
        echo "c_mnt=/app/workspace" >> $GITHUB_ENV
        if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
          echo "image_url=${{ github.event.client_payload.image_url }}" >> $GITHUB_ENV
        elif [ -n "${{ vars.PYTHON_GRADER_URL }}" ]; then
          echo "image_url=${{ vars.PYTHON_GRADER_URL }}" >> $GITHUB_ENV
        else
          echo "image_url=ghcr.io/${{ github.repository_owner }}/python-pytest-${ASSIGNMENT_NUM}:latest" >> $GITHUB_ENV
        fi

    - name: Log image URL
      run: |
        echo "Using IMAGE_URL: ${{ env.image_url }}"

    # container json report folder has to be a location under
    #   container mounting point
    - name: Set folders within the container
      run: |
        echo "c_code=${{ env.c_mnt }}" >> $GITHUB_ENV
        echo "c_test=/tests" >> $GITHUB_ENV
        echo "c_json=${{ env.c_mnt }}" >> $GITHUB_ENV

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT }}

    - name: Pull Docker Image
      run: docker pull ${{ env.image_url }}

    - name: check syntax
      id: check-syntax
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: check syntax
        setup-command: "docker run --rm --user 1001:1001 --volume ${{ github.workspace }}:${{ env.c_mnt }} ${{ env.image_url }} python3 -m pip list"
        command:       "docker run --rm --user 1001:1001 --volume ${{ github.workspace }}:${{ env.c_mnt }} --env STUDENT_CODE_FOLDER=${{ env.c_code }} ${{ env.image_url }} python3 -m pytest --json-report --json-report-indent=4 --json-report-file=${{ env.c_json }}/${{ env.syntax }} ${{ env.c_test }}/test_syntax.py" # Run test in container
        timeout: 2
        max-score: 1

    - name: check style
      id: check-style
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: check style
        setup-command: "docker run --rm --user 1001:1001 --volume ${{ github.workspace }}:${{ env.c_mnt }} ${{ env.image_url }} python3 -m pip list"
        command:       "docker run --rm --user 1001:1001 --volume ${{ github.workspace }}:${{ env.c_mnt }} --env STUDENT_CODE_FOLDER=${{ env.c_code }} ${{ env.image_url }} python3 -m pytest --json-report --json-report-indent=4 --json-report-file=${{ env.c_json }}/${{ env.style }} ${{ env.c_test }}/test_style.py"
        timeout: 2
        max-score: 1

    - name: test results
      id: test-results
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: test results
        setup-command: "docker run --rm --user 1001:1001 --volume ${{ github.workspace }}:${{ env.c_mnt }} ${{ env.image_url }} python3 -m pip list"
        command:       "docker run --rm --user 1001:1001 --volume ${{ github.workspace }}:${{ env.c_mnt }} --env STUDENT_CODE_FOLDER=${{ env.c_code }} ${{ env.image_url }} python3 -m pytest -n auto --json-report --json-report-indent=4 --json-report-file=${{ env.c_json }}/${{ env.results }} ${{ env.c_test }}/test_results.py" # Run test in container
        timeout: 5
        max-score: 3

    - name: Autograding Reporter
      uses: classroom-resources/autograding-grading-reporter@v1
      env:
        CHECK-SYNTAX_RESULTS: "${{steps.check-syntax.outputs.result}}"
        CHECK-STYLE_RESULTS: "${{steps.check-style.outputs.result}}"
        TEST-RESULTS_RESULTS: "${{steps.test-results.outputs.result}}"
      with:
        runners: check-syntax,check-style,test-results

    - name: AI Tutor
      id: ai-tutor
      if: always()
      run: |
        docker run --rm --user 1001:1001 \
          --volume ${{ github.workspace }}:${{ env.c_mnt }} \
          --env INPUT_REPORT-FILES="${{ env.c_mnt }}/${{ env.results }},${{ env.c_mnt }}/${{ env.syntax }},${{ env.c_mnt }}/${{ env.style }}" \
          --env INPUT_STUDENT-FILES="${{ env.c_code }}/exercise.py" \
          --env INPUT_README-PATH="${{ env.c_code }}/README.md" \
          --env INPUT_CLAUDE_API_KEY="${{ secrets.CLAUDE_API_KEY }}" \
          --env INPUT_GEMINI-API-KEY="${{ secrets.GOOGLE_API_KEY }}" \
          --env INPUT_GROK-API-KEY="${{ secrets.XAI_API_KEY }}" \
          --env INPUT_NVIDIA-API-KEY="${{ secrets.NVIDIA_NIM_API_KEY }}" \
          --env INPUT_PERPLEXITY-API-KEY="${{ secrets.PERPLEXITY_API_KEY }}" \
          --env INPUT_GITHUB_REPOSITORY="${{ github.repository }}" \
          --env INPUT_MODEL="${{ secrets.DEFAULT_MODEL }}" \
          --env INPUT_EXPLANATION-IN="Korean" \
          ${{ env.image_url }} \
          python3 ai_tutor/entrypoint.py > ./feedback.md
      timeout-minutes: 10

    - name: forward feedback to summary
      if: always()
      run: |
        cat ./feedback.md >> $GITHUB_STEP_SUMMARY

    - name: upload artifacts
      id: artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: artifacts-${{ env.SHORT_SHA }}
        path: |
          ./*.png
          ./*.json
          ./feedback.md
        retention-days: 21
        overwrite: true

# end .github/workflows/classroom.yml
